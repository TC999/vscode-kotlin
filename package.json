{
    "name": "kotlin",
    "displayName": "Kotlin",
    "description": "代码补全、调试、内衬等功能",
    "icon": "resources/Icon128.png",
    "repository": {
        "type": "git",
        "url": "https://github.com/fwcd/vscode-kotlin.git"
    },
    "version": "0.2.36",
    "preview": true,
    "publisher": "fwcd",
    "license": "MIT",
    "categories": [
        "Programming Languages",
        "Debuggers",
        "Formatters",
        "Linters"
    ],
    "keywords": [
        "kotlin",
        "ide",
        "debugger"
    ],
    "activationEvents": [
        "onLanguage:kotlin",
        "onDebugResolve:kotlin"
    ],
    "main": "./dist/extension",
    "contributes": {
        "languages": [
            {
                "id": "kotlin",
                "aliases": [
                    "Kotlin"
                ],
                "extensions": [
                    ".kt",
                    ".kts"
                ],
                "configuration": "./language-configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "kotlin",
                "scopeName": "source.kotlin",
                "path": "./syntaxes/kotlin.tmLanguage.json"
            },
            {
                "scopeName": "markdown.kotlin.codeblock",
                "path": "./syntaxes/kotlin-codeblock.json",
                "injectTo": [
                    "text.html.markdown"
                ],
                "embeddedLanguages": {
                    "meta.embedded.block.kotlin": "kotlin"
                }
            }
        ],
        "commands": [
            {
                "command": "kotlin.overrideMember",
                "title": "覆盖成员",
                "category": "Kotlin"
            }
        ],
        "menus": {
            "editor/context": [
                {
                    "command": "kotlin.overrideMember",
                    "group": "Kotlin",
                    "when": "editorTextFocus && editorLangId == kotlin"
                }
            ]
        },
        "breakpoints": [
            {
                "language": "kotlin"
            }
        ],
        "debuggers": [
            {
                "type": "kotlin",
                "label": "Kotlin",
                "configurationAttributes": {
                    "launch": {
                        "required": [
                            "projectRoot",
                            "mainClass"
                        ],
                        "properties": {
                            "projectRoot": {
                            "type": "string",
                            "description": "项目根文件夹的绝对路径。如果你想调试子项目，请在这里指定根/顶级目录和在 'subproject' 属性中的相对路径。",
                            "default": "${workspaceFolder}"
                        },
                        "mainClass": {
                            "type": "string",
                            "description": "你的主类的完全限定名（通常是你的文件名使用帕斯卡命名法，并以 Kt 结尾）。",
                            "default": "path.to.your.MainClassKt"
                        },
                        "vmArguments": {
                            "type": "string",
                            "description": "你的项目需要的 JVM 参数（通常是 -Dfoo=bar）。",
                            "default": ""
                        },
                        "enableJsonLogging": {
                            "type": "boolean",
                            "description": "启用将调试服务器的 JSON 消息记录到由 'jsonLogFile' 定义的文件中的日志记录。",
                            "default": false
                        },
                        "jsonLogFile": {
                            "type": "string",
                            "description": "启用将调试服务器的 JSON 消息记录到由 'jsonLogFile' 定义的文件中的日志记录。",
                            "default": "${workspaceFolder}/ktDebugJsonLog.txt"
                        },
                        "logLevel": {
                            "type": "string",
                            "description": "设置调试服务器的日志级别，用于调试控制台中的消息 [NONE/ERROR/WARN/INFO/DEBUG/TRACE/DEEP_TRACE/ALL]。",
                            "default": "INFO"
                        }
                        }
                    },
                    "attach": {
                        "required": [
                            "projectRoot",
                            "hostName",
                            "port",
                            "timeout"
                        ],
                        "properties": {
                            "projectRoot": {
                                "type": "string",
                                "description": "项目根文件夹的绝对路径。如果你想调试子项目，请在此指定根/顶级目录，以及在 'subproject' 属性中的相对路径。",
                                "default": "${workspaceFolder}"
                            },
                            "hostName": {
                                "type": "string",
                                "description": "你运行中的 JVM 的主机名。",
                                "default": "localhost"
                            },
                            "port": {
                                "type": "number",
                                "description": "你运行中的 JVM 的端口号。",
                                "default": 8000
                            },
                            "timeout": {
                                "type": "number",
                                "description": "连接超时时间。",
                                "default": 30000
                            },
                            "enableJsonLogging": {
                                "type": "boolean",
                                "description": "启用将调试服务器的 JSON 消息记录到由 'jsonLogFile' 定义的文件中的日志记录。",
                                "default": false
                            },
                            "jsonLogFile": {
                                "type": "string",
                                "description": "启用将调试服务器的 JSON 消息记录到由 'jsonLogFile' 定义的文件中的日志记录。",
                                "default": "${workspaceFolder}/ktDebugJsonLog.txt"
                            },
                            "logLevel": {
                                "type": "string",
                                "description": "设置调试服务器的日志级别，用于调试控制台中的消息 [NONE/ERROR/WARN/INFO/DEBUG/TRACE/DEEP_TRACE/ALL]。",
                                "default": "INFO"
                            }
                        }
                    }
                },
                "initialConfigurations": [
                    {
                        "type": "kotlin",
                        "request": "launch",
                        "name": "Kotlin 运行",
                        "projectRoot": "${workspaceFolder}",
                        "mainClass": "path.to.your.MainClassKt"
                    }
                ],
                "configurationSnippets": [
                    {
                        "label": "Kotlin: Launch Project",
                        "description": "一个新的 Kotlin 启动配置",
                        "body": {
                            "type": "kotlin",
                            "request": "launch",
                            "name": "Kotlin 运行",
                            "projectRoot": "^\"${workspaceFolder}\"",
                            "mainClass": "path.to.your.MainClassKt"
                        }
                    },
                    {
                        "label": "Kotlin: Attach VM",
                        "description": "将调试器附加到运行中的 JVM",
                        "body": {
                            "type": "kotlin",
                            "request": "attach",
                            "name": "Kotlin Attach",
                            "hostName": "localhost",
                            "port": 8000,
                            "timeout": 30000
                        }
                    }                                      
                ]
            }
        ],
        "configuration": {
            "title": "Kotlin",
            "properties": {
                "kotlin.java.home": {
                    "type": "string",
                    "default": "",
                    "description": "语言服务器和调试适配器使用的自定义 JAVA_HOME。"
                },
                "kotlin.java.opts": {
                    "type": "string",
                    "default": "",
                    "description": "为语言服务器和调试适配器使用 JAVA_OPTS 的自定义选项。"
                },
                "kotlin.languageServer.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "[推荐] 指定是否应该使用语言服务器。启用后，扩展将提供代码补全和 linting，否则只提供语法高亮。可能需要重新加载才能应用。"
                },
                "kotlin.languageServer.path": {
                    "type": "string",
                    "default": "",
                    "description": "可选地指定语言服务器可执行文件的自定义路径。"
                },
                "kotlin.languageServer.transport": {
                    "type": "string",
                    "enum": [
                        "stdio",
                        "tcp"
                    ],
                    "description": "语言服务器协议下的传输层。请注意，即使使用 TCP 套接字，扩展也会启动服务器。",
                    "default": "stdio"
                },
                "kotlin.languageServer.port": {
                    "type": "integer",
                    "description": "客户端将尝试连接的端口。如果为零，则使用随机端口。仅当传输层是 TCP 时使用。",
                    "default": 0
                },
                "kotlin.languageServer.debugAttach.enabled": {
                    "type": "boolean",
                    "description": "[DEBUG] 是否语言服务器应该监听调试器，即在 VSCode 中运行时是否可调试。这只在你确实需要调试语言服务器本身时才有用。",
                    "default": false
                },
                "kotlin.languageServer.debugAttach.port": {
                    "type": "integer",
                    "description": "[DEBUG] 如果传输是 stdio，这允许你使用调试器附加到运行中的语言服务器。这只在你确实需要调试语言服务器本身时才有用。",
                    "default": 5005
                },
                "kotlin.languageServer.debugAttach.autoSuspend": {
                    "type": "boolean",
                    "description": "[DEBUG] 如果启用（与 debugAttach.enabled 一起），语言服务器不会立即启动，而是在指定的附加端口上监听并等待调试器。这只在你确实需要调试语言服务器本身时才有用。",
                    "default": false
                },
                "kotlin.languageServer.watchFiles": {
                    "type": "array",
                    "default": [
                        "**/*.kt",
                        "**/*.kts",
                        "**/*.java",
                        "**/pom.xml",
                        "**/build.gradle",
                        "**/settings.gradle"
                    ],
                    "description": "指定 LSP 客户端将要监视的文件的全局模式。LSP 客户端不支持监视工作区文件夹外的文件。"
                },
                "kotlin.trace.server": {
                    "type": "string",
                    "enum": [
                        "off",
                        "messages",
                        "verbose"
                    ],
                    "default": "off",
                    "description": "跟踪 VSCode 与 Kotlin 语言服务器之间的通信。",
                    "scope": "window"
                },
                "kotlin.codegen.enabled": {
                    "type": "boolean",
                    "description": "是否为 Java 互操作性（通过非标准的 kotlin/buildOutputLocation LSP 方法）启用临时构建输出目录的代码生成。实验性功能。",
                    "default": false
                },
                "kotlin.compiler.jvm.target": {
                    "type": "string",
                    "default": "default",
                    "description": "指定 JVM 目标，例如 \"1.6\" 或 \"1.8\""
                },
                "kotlin.diagnostics.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "是否应该发出诊断信息（例如 Kotlin 编译器的错误或警告）。"
                },
                "kotlin.diagnostics.level": {
                    "type": "string",
                    "default": "hint",
                    "enum": ["error", "warning", "information", "hint"],
                    "description": "要发出的诊断信息的最小严重性。"
                },
                "kotlin.diagnostics.debounceTime": {
                    "type": "integer",
                    "default": 250,
                    "description": "[DEBUG] 指定防抖时间限制。降低以提高响应性，可能以稳定性问题为代价。"
                },
                "kotlin.linting.debounceTime": {
                    "type": "integer",
                    "default": 250,
                    "deprecationMessage": "该选项已重命名为 `kotlin.diagnostics.debounceTime`",
                    "description": "[DEBUG] 指定防抖时间限制。降低以提高响应性，可能以稳定性问题为代价。"
                },
                "kotlin.scripts.enabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "是否为 .kts 脚本提供语言特性。实验性功能，可能无法正常工作。"
                },
                "kotlin.scripts.buildScriptsEnabled": {
                    "type": "boolean",
                    "default": false,
                    "description": "是否为 .gradle.kts 脚本提供语言特性。实验性功能，可能无法正常工作。"
                },
                "kotlin.indexing.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "是否应该在后台自动索引项目中的全局符号。这可以启用例如未导入类和函数的代码补全。"
                },
                "kotlin.completion.snippets.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "指定代码补全是否应该提供代码片段（true）还是纯文本项（false）。"
                },
                "kotlin.debugAdapter.enabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "[推荐] 指定是否应该使用调试适配器。启用后，将提供 Kotlin 的调试器。"
                },
                "kotlin.debugAdapter.path": {
                    "type": "string",
                    "default": "",
                    "description": "可选地指定调试适配器可执行文件的自定义路径。"
                },
                "kotlin.debounceTime": {
                    "type": "integer",
                    "default": 250,
                    "description": "[已弃用] 指定防抖时间限制。降低以提高响应性，可能以稳定性问题为代价。",
                    "deprecationMessage": "请使用 'kotlin.linting.debounceTime' 代替"
                },
                "kotlin.externalSources.useKlsScheme": {
                    "type": "boolean",
                    "default": true,
                    "description": "[推荐] 指定 JAR 内的 URI 是否应该使用 'kls' 方案表示。"
                },
                "kotlin.externalSources.autoConvertToKotlin": {
                    "type": "boolean",
                    "default": false,
                    "description": "指定是否应该自动将反编译/外部类转换为 Kotlin。"
                },
                "kotlin.snippetsEnabled": {
                    "type": "boolean",
                    "default": true,
                    "description": "[已弃用] 指定代码补全是否应该提供代码片段（true）或纯文本项（false）。",
                    "deprecationMessage": "请使用 'kotlin.completion.snippets.enabled'"
                },
                "kotlin.inlayHints.typeHints": {
                    "type": "boolean",
                    "default": false,
                    "description": "是否在声明站点提供类型内联提示。"
                },
                "kotlin.inlayHints.parameterHints": {
                    "type": "boolean",
                    "default": false,
                    "description": "是否在调用站点提供参数内联提示。"
                },
                "kotlin.inlayHints.chainedHints": {
                    "type": "boolean",
                    "default": false,
                    "description": "是否在链式函数调用上提供内联提示。"
                }
            }
        }
    },
    "scripts": {
        "compile": "tsc -p ./",
        "watch": "webpack --mode development -w",
        "vscode:prepublish": "webpack --mode production",
        "package-extension": "vsce package",
        "publish-extension": "vsce publish"
    },
    "engines": {
        "vscode": "^1.52.0"
    },
    "devDependencies": {
        "@types/extract-zip": "^2.0.1",
        "@types/node": "^12.8.1",
        "@types/request-promise-native": "^1.0.18",
        "@types/semver": "^7.3.9",
        "@types/vscode": "^1.52.0",
        "ts-loader": "^9.2.8",
        "typescript": "^4.6.3",
        "vsce": "^2.7.0",
        "webpack": "^5.71.0",
        "webpack-cli": "^4.9.2"
    },
    "dependencies": {
        "extract-zip": "^2.0.1",
        "request": "^2.88.2",
        "request-progress": "^3.0.0",
        "request-promise-native": "^1.0.9",
        "semver": "^7.3.5",
        "vscode-debugadapter": "^1.47.0",
        "vscode-debugprotocol": "^1.47.0",
        "vscode-languageclient": "8.0.2-next.5"
    }
}
